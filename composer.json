{
    "name": "dennisdigital/polaris-drupal-project",
    "description": "Project template for Polaris projects with composer",
    "type": "project",
    "license": "GPL-2.0-or-later",
    "minimum-stability": "dev",
    "prefer-stable": true,
    "repositories": [
        {
            "type": "composer",
            "url": "https://repo.packagist.com/dennisdigital/"
        },
        {
            "packagist.org": false
        }
    ],
    "require": {
        "php": ">=7.3",
        "behat/mink-selenium2-driver": "^1.6.0",
        "composer/installers": "^2.1.1",
        "cweagans/composer-patches": "^1.7.2",
        "dennisdigital/polaris": "~3.16.0",
        "drupal/core-composer-scaffold": "^9.3.14",
        "oomphinc/composer-installers-extender": "^2.0.1"
    },
    "conflict": {
        "drupal/drupal": "*"
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "composer/installers": true,
            "cweagans/composer-patches": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "drupal/console-extend-plugin": true,
            "oomphinc/composer-installers-extender": true,
            "zaporylie/composer-drupal-optimizations": true,
            "wikimedia/composer-merge-plugin": true,
            "drupal/core-composer-scaffold": true
        }
    },
    "autoload": {
        "classmap": [
            "scripts/composer/ScriptHandler.php"
        ],
        "files": [
            "load.environment.php"
        ]
    },
    "scripts": {
        "pre-install-cmd": [
            "DrupalProject\\composer\\ScriptHandler::checkComposerVersion"
        ],
        "pre-update-cmd": [
            "DrupalProject\\composer\\ScriptHandler::checkComposerVersion"
        ],
        "post-install-cmd": [
            "@drupal-scaffold",
            "DrupalProject\\composer\\ScriptHandler::createRequiredFiles"
        ],
        "post-update-cmd": [
            "DrupalProject\\composer\\ScriptHandler::createRequiredFiles",
            "echo # drush cim -y",
            "echo # drush updb -y",
            "echo # drush cex -y",
            "echo # git status"
        ]
    },
    "extra": {
        "composer-exit-on-patch-failure": true,
        "installer-types": [
            "bower-asset"
        ],
        "installer-paths": {
            "web/core": [
                "type:drupal-core"
            ],
            "web/libraries/{$name}": [
                "type:drupal-library",
                "type:bower-asset"
            ],
            "web/modules/contrib/{$name}": [
                "type:drupal-module"
            ],
            "web/profiles/{$name}": [
                "type:drupal-profile"
            ],
            "web/themes/contrib/{$name}": [
                "type:drupal-theme"
            ],
            "drush/Commands/{$name}": [
                "type:drupal-drush"
            ]
        },
        "enable-patching": true,
        "patchLevel": {
            "drupal/core": "-p2"
        },
        "drupal-scaffold": {
            "locations": {
                "web-root": "./web"
            },
            "initial": {
                ".editorconfig": "../.editorconfig",
                ".gitattributes": "../.gitattributes"
            },
            "excludes": [
                "web.config"
            ]
        }
    }
}
